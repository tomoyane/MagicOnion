name: build-debug

on:
  push:
    branches:
      - master
    tags:
      - "!*" # not a tag push
  pull_request:
    branches:
      - "master"

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
      DOTNET_SDK_VERSION_3: "3.1.x"
      DOTNET_SDK_VERSION_5: "5.0.x"
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "${{ env.DOTNET_SDK_VERSION_3 }}"
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "${{ env.DOTNET_SDK_VERSION_5 }}"
      # build
      - run: dotnet build ./src/MagicOnion/ -c Debug
      - run: dotnet build ./src/MagicOnion.Abstractions/ -c Debug
      - run: dotnet build ./src/MagicOnion.Shared/ -c Debug
      - run: dotnet build ./src/MagicOnion.Client/ -c Debug
      - run: dotnet build ./src/MagicOnion.Server/ -c Debug
      - run: dotnet build ./src/MagicOnion.Server.HttpGateway/ -c Debug
      - run: dotnet build ./src/MagicOnion.Server.Redis/ -c Debug
      - run: dotnet build ./src/MagicOnion.Server.Authentication/ -c Debug
      #- run: dotnet build ./src/MagicOnion.Server.OpenTelemetry/ -c Debug
      - run: dotnet build ./src/MagicOnion.MSBuild.Tasks/ -c Debug
      - run: dotnet build ./src/MagicOnion.Generator/ -c Debug
      # test
      - run: dotnet test ./tests/MagicOnion.Server.Tests/ -c Debug
      - run: dotnet test ./tests/MagicOnion.Generator.Tests/ -c Debug

  build-dotnet-experimental:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
      DOTNET_SDK_VERSION_3: "3.1.x"
      DOTNET_SDK_VERSION_5: "5.0.x"
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "${{ env.DOTNET_SDK_VERSION_3 }}"
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "${{ env.DOTNET_SDK_VERSION_5 }}"
      # build
      - run: dotnet build ./src/MagicOnion.Server.OpenTelemetry/ -c Debug
      # test

  build-unity:
    strategy:
      matrix:
        unity: ["2019.3.9f1", "2019.4.13f1", "2020.1.12f1"]
        include:
          - unity: 2019.3.9f1
            license: UNITY_LICENSE_2019
          - unity: 2019.4.13f1
            license: UNITY_LICENSE_2019
          - unity: 2020.1.12f1
            license: UNITY_LICENSE_2020
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      # todo: prepare runtime unit test
      # Execute scripts: RuntimeUnitTestToolkit
      # - name: Build UnitTest(Linux64, mono)
      #   run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod UnitTestBuilder.BuildUnitTest /headless /ScriptBackend mono /BuildTarget StandaloneLinux64
      #   working-directory: src/ZLogger.Unity
      # - name: Execute UnitTest
      #   run: ./src/ZLogger.Unity/bin/UnitTest/StandaloneLinux64_Mono2x/test

      # execute scripts/Export Package
      # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod PackageExporter.Export
      - name: Export unitypackage
        uses: game-ci/unity-builder@v2.0-alpha-6
        env:
          UNITY_LICENSE: ${{ secrets[matrix.license] }}
        with:
          projectPath: src/MagicOnion.Client.Unity
          unityVersion: ${{ matrix.unity }}
          targetPlatform: StandaloneLinux64
          buildMethod: PackageExporter.Export
          versioning: None

      - name: check all .meta is commited
        run: |
          if git ls-files --others --exclude-standard -t | grep --regexp='[.]meta$'; then
            echo "Detected .meta file generated. Do you forgot commit a .meta file?"
            exit 1
          else
            echo "Great, all .meta files are commited."
          fi
        working-directory: src/MagicOnion.Client.Unity

      # Store artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: MagicOnion.Client.Unity.${{ matrix.unity }}.unitypackage
          path: ./src/MagicOnion.Client.Unity/MagicOnion.Client.Unity.unitypackage
